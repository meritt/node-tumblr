// Generated by CoffeeScript 1.6.3
/*
  node-tumblr 0.1.2
  (c) 2011-2013 Alexey Simonenko, Serenity LLC.
  Refactored and modified by Greg Wang
*/


(function() {
  var Blog, RequestUtils;

  RequestUtils = require('./requestutils');

  module.exports = Blog = function(host, consumer_key, consumer_secret, token, token_secret) {
    this.host = host;
    this.consumer_key = consumer_key;
    this.consumer_secret = consumer_secret;
    this.token = token;
    return this.token_secret = token_secret;
  };

  (function() {
    var alias, type, _i, _len, _ref, _results;
    this.info = function(fn) {
      var url;
      url = RequestUtils.blogUrl('info', this);
      return RequestUtils.get(url, fn);
    };
    this.avatar = function(size, fn) {
      var url, _ref;
      if (typeof size === 'function') {
        _ref = [size, null], fn = _ref[0], size = _ref[1];
      }
      url = RequestUtils.blogUrl('avatar', this, {
        type: size
      });
      return RequestUtils.get(url, fn);
    };
    this.likes = function(options, fn) {
      var url, _ref;
      if (typeof options === 'function') {
        _ref = [options, null], fn = _ref[0], options = _ref[1];
      }
      url = RequestUtils.blogUrl('likes', this, options);
      return RequestUtils.get(url, fn);
    };
    this.posts = function(options, fn) {
      var url, _ref;
      if (typeof options === 'function') {
        _ref = [options, null], fn = _ref[0], options = _ref[1];
      }
      url = RequestUtils.blogUrl('posts', this, options);
      return RequestUtils.get(url, fn);
    };
    alias = function(self, type) {
      return self[type] = function(options, fn) {
        if (!options) {
          options = {};
        }
        if (!options.type) {
          options.type = type;
        }
        return this.posts(options, fn);
      };
    };
    _ref = ['text', 'quote', 'link', 'answer', 'video', 'audio', 'photo'];
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      type = _ref[_i];
      _results.push(alias(this, type));
    }
    return _results;
  }).call(Blog.prototype);

}).call(this);
